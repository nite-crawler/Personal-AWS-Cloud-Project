{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudFormation Template for setting up production VPC",
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "VPC configuration parameters" },
          "Parameters" : [ "VPCCIDR", "PublicSubnet1CIDR", "PublicSubnet2CIDR", "PrivateSubnet1CIDR", "PrivateSubnet2CIDR", "AZ1", "AZ2" ]
        }
      ],
      "ParameterLabels" : {
        "VPCCIDR" : { "default" : "Enter CIDR of new VPC" },
        "PublicSubnet1CIDR" : { "default" : "Enter CIDR of the public subnet1" },
        "PublicSubnet2CIDR" : { "default" : "Enter CIDR of the public subnet2" },
        "PrivateSubnet1CIDR" : { "default" : "Enter CIDR of the private subnet1" },
        "PrivateSubnet2CIDR" : { "default" : "Enter CIDR of the private subnet2" },
        "AZ1" : { "default" : "Enter Availability Zone 1 for subnets" },
        "AZ2" : { "default" : "Enter Availability Zone 2 for subnets" }
      }
    }
  },


  "Parameters": {
    "VPCCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/16",
      "Description": "CIDR block for entire VPC.",
      "Type": "String",
      "NoEcho" : "false"
    },
    "PublicSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.1.0/24",
      "Description": "CIDR block for the public subnet 1",
      "Type": "String",
      "NoEcho" : "false"
    },
    "PrivateSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.2.0/24",
      "Description": "CIDR block for the private subnet 1",
      "Type": "String",
      "NoEcho" : "false"
    },
    "PublicSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.3.0/24",
      "Description": "CIDR block for the public subnet 2",
      "Type": "String",
      "NoEcho" : "false"
    },
    "PrivateSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.4.0/24",
      "Description": "CIDR block for the private subnet 2",
      "Type": "String",
      "NoEcho" : "false"
    },
    "AZ1": {
      "Default": "us-east-1a",
      "Description": "AZ1 for the subnet1",
      "Type": "String",
      "NoEcho": "false"
    },
    "AZ2": {
      "Default": "us-east-1b",
      "Description": "AZ2 for the subnet1",
      "Type": "String",
      "NoEcho": "false"
    }
  },


  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "false",
        "Tags" : [ {"Key" : "Name", "Value" : "VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "PublicSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR" },
        "AvailabilityZone" : { "Ref" : "AZ1" },
        "Tags" : [ {"Key" : "Name", "Value" : "PublicSubnet1-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    "PublicSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR" },
        "AvailabilityZone" : { "Ref" : "AZ2" },
        "Tags" : [ {"Key" : "Name", "Value" : "PublicSubnet2-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },


    "PrivateSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR" },
        "AvailabilityZone" : { "Ref" : "AZ1" },
        "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet1-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    "PrivateSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR" },
        "AvailabilityZone" : { "Ref" : "AZ2" },
        "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet2-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },


    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "InternetGateway-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "InternetGatewayId" : { "Ref" : "InternetGateway" }
      }
    },


    "EIP1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : { "Domain" : "vpc" }
    },
    "NAT1" : {
      "DependsOn" : "AttachGateway",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" :  { "Fn::GetAtt" : [ "EIP1", "AllocationId" ] },
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "Tags" : [ {"Key" : "Name", "Value" : "NAT1-VPC-PROD" } ]
      }
    },


    "EIP2" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : { "Domain" : "vpc" }
    },
    "NAT2" : {
      "DependsOn" : "AttachGateway",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" :  { "Fn::GetAtt" : [ "EIP2", "AllocationId" ] },
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "Tags" : [ {"Key" : "Name", "Value" : "NAT2-VPC-PROD" } ]
      }
    },


    "PublicSubnetRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : "PublicSubnet-RouteTable-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnet1RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" }
      }
    },
    "PublicSubnet2RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" }
      }
    },


    "PrivateSubnet1RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet1-RouteTable-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    "PrivateSubnet2RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet2-RouteTable-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    "PrivateSubnet1Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnet1RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT1" }
      }
    },
    "PrivateSubnet2Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnet2RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT2" }
      }
    },


    "PrivateSubnet1RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "RouteTableId" : { "Ref" : "PrivateSubnet1RouteTable" }
      }
    },
    "PrivateSubnet2RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "RouteTableId" : { "Ref" : "PrivateSubnet2RouteTable" }
      }
    },


    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : "NetworkACL-VPC-PROD" }, {"Key" : "Production", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },


    "InboundHTTPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },
    "InboundHTTPSNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },
    "InboundSSHNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },
    "InboundOpenVPNTCPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "943", "To" : "943"}
      }
    },
    "InboundOpenVPNUDPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "104",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1194", "To" : "1194"}
      }
    },
    "InboundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "105",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },


    "OutBoundHTTPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },
    "OutBoundHTTPSNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },
    "OutBoundSSHNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },
    "OutBoundOpenVPNTCPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "943", "To" : "943"}
      }
    },
    "OutBoundOpenVPNUDPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "104",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1194", "To" : "1194"}
      }
    },
    "OutBoundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "105",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },


    "PublicSubnet1NetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PublicSubnet2NetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnet1NetworkAclAssociation" : {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet1" },
        "NetworkAclId": { "Ref": "NetworkAcl" }
      }
    },
    "PrivateSubnet2NetworkAclAssociation" : {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet2" },
        "NetworkAclId": { "Ref": "NetworkAcl" }
      }
    }
  },


  "Outputs" : {
    "VPCId" : {
      "Description": "VPCId of the newly created VPC",
      "Value" : { "Ref" : "VPC" },
      "Export" : {
        "Name" : {"Fn::Sub": "${AWS::StackName}-VPCID" }
      }
    },
    "NatGateway1" : {
      "Description": "NAT1 gateway instance",
      "Value" : { "Ref" : "NAT1" }
    },
    "NatGateway2" : {
      "Description": "NAT2 gateway instance",
      "Value" : { "Ref" : "NAT2" }
    },
    "EIPAddress1" : {
      "Description": "EIP1 allocated to NAT1 gateway",
      "Value" : { "Ref" : "EIP1" }
    },
    "EIPAddress2" : {
      "Description": "EIP2 allocated to NAT2 gateway",
      "Value" : { "Ref" : "EIP2" }
    },
    "PublicSubnet1" : {
      "Description": "SubnetId of the public subnet1",
      "Value" : { "Ref" : "PublicSubnet1" },
      "Export" : {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet1"
        }
      }
    },
    "PublicSubnet2" : {
      "Description": "SubnetId of the public subnet2",
      "Value" : { "Ref" : "PublicSubnet2" },
      "Export" : {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet2"
        }
      }
    },
    "PrivateSubnet1" : {
      "Description": "SubnetId of the private subnet1",
      "Value" : { "Ref" : "PrivateSubnet1" },
      "Export" : {
        "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSubnet1" }
      }
    },
    "PrivateSubnet2" : {
      "Description": "SubnetId of the private subnet1",
      "Value" : { "Ref" : "PrivateSubnet2" },
      "Export" : {
        "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSubnet2" }
      }
    }
  }
}